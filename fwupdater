#!/usr/bin/env python
# -*- Mode: Python; indent-tabs-mode: nil; -*-
#
# fwupdater: Add external Block List IPs to an Iptables firewall
# Created -- Marcus Butler <marcusb@marcusb.org>, 01-January-2017
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import sys
import os
import re

### Configuration variables ###
BL_FILE = "./et-fw.txt"
BL_ACTION = "REJECT"
BL_TABLE = "BLOCKLIST"
IPTABLES_PATH = "echo /sbin/iptables"

PROCESSED_IPS = []

def validate_ip(candidate):
    x = re.sub('#.*$', '', candidate)

    y = re.search('(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})(/\d{1,2})?', x)

    if y:
        if (int(y.group(1)) > 255 or int(y.group(2)) > 255 or
            int(y.group(3)) > 255 or int(y.group(4)) > 255 or
            (y.group(5) and int(y.group(5)[1:]) > 32)):
            return None
        return y.group(0)
    else:
        return None

def flush_table():
    rc = os.system(IPTABLES_PATH + " -F " + BL_TABLE)
    if rc != 0:
        print ("Fatal error flushing " + BL_TABLE + " " + rc)
        sys.exit(1)

def add_ip(ip):
    rc = os.system(IPTABLES_PATH + " -A " + BL_TABLE + " -s " + ip + \
                   " -j " + BL_ACTION)
    if rc != 0:
       print ("Fatal error adding " + ip + " to " + BL_TABLE + ": " + rc)
       sys.exit(1)

bl = open(BL_FILE, 'r')
bl_data = bl.read().split('\n')
bl.close()

for line in bl_data:
    # Filter out comments

    ip = validate_ip(line)

    if ip:
       PROCESSED_IPS.append(ip)

flush_table()


for ip in PROCESSED_IPS:
    add_ip(ip)
